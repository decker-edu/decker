(()=>{"use strict";var t={d:(o,a)=>{for(var e in a)t.o(a,e)&&!t.o(o,e)&&Object.defineProperty(o,e,{enumerable:!0,get:a[e]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};t.r(o),t.d(o,{TagFormatConfiguration:()=>p,tagformatConfig:()=>f});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,e=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults,a.combineWithMathJax),r=(a.MathJax,MathJax._.input.tex.Configuration),n=r.Configuration,s=(r.ConfigurationHandler,r.ParserConfiguration,MathJax._.input.tex.Tags),i=(s.Label,s.TagInfo,s.AbstractTags,s.NoTags,s.AllTags,s.TagsFactory);let g=0;function f(t,o){const a=o.parseOptions.options.tags;"base"!==a&&t.tags.hasOwnProperty(a)&&i.add(a,t.tags[a]);const e=i.create(o.parseOptions.options.tags).constructor;g++;const r="configTags-"+g;i.add(r,class extends e{formatNumber(t){return o.parseOptions.options.tagformat.number(t)}formatTag(t){return o.parseOptions.options.tagformat.tag(t)}formatRef(t){const a=o.parseOptions.options.tagformat.ref;return a?a(t):this.formatTag(t)}formatId(t){return o.parseOptions.options.tagformat.id(t)}formatUrl(t,a){return o.parseOptions.options.tagformat.url(t,a)}}),o.parseOptions.options.tags=r}const p=n.create("tagformat",{config:[f,10],options:{tagformat:{number:t=>t.toString(),tag:t=>"("+t+")",ref:"",id:t=>"mjx-eqn:"+t.replace(/\s/g,"_"),url:(t,o)=>o+"#"+encodeURIComponent(t)}}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/tagformat","4.0.0-beta.4","tex-extension"),e({_:{input:{tex:{tagformat:{TagFormatConfiguration:o}}}}})})();