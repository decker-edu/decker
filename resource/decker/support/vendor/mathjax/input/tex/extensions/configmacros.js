(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{ConfigMacrosConfiguration:()=>w});const n=("undefined"!=typeof window?window:global).MathJax._.components.global,o=(n.GLOBAL,n.isObject,n.combineConfig,n.combineDefaults,n.combineWithMathJax),a=(n.MathJax,MathJax._.input.tex.Configuration),i=a.Configuration,r=(a.ConfigurationHandler,a.ParserConfiguration,MathJax._.util.Options),s=(r.isObject,r.APPEND,r.REMOVE,r.OPTIONS,r.Expandable,r.expandable),c=(r.makeArray,r.keys,r.copy,r.insert,r.defaultOptions,r.userOptions,r.selectOptions,r.selectOptionsFromKeys,r.separateOptions,r.lookup,MathJax._.input.tex.TokenMap),p=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap,c.MacroMap),m=c.CommandMap,f=c.EnvironmentMap,d=MathJax._.input.tex.ParseMethods.default,l=MathJax._.input.tex.Token,u=(l.Token,l.Macro),M=MathJax._.input.tex.newcommand.NewcommandMethods.default,g=MathJax._.input.tex.newcommand.NewcommandItems.BeginEnvItem,x=MathJax._.input.tex.base.BaseMethods,h=(x.splitAlignArray,x.default),b="configmacros-map",O="configmacros-active-map",y="configmacros-env-map";function v(e,t,n){const o=n.parseOptions.handlers.retrieve(t),a=n.parseOptions.options[e];for(const e of Object.keys(a)){const t="string"==typeof a[e]?[a[e]]:a[e],n=Array.isArray(t[2])?new u(e,M.MacroWithTemplate,t.slice(0,2).concat(t[2])):new u(e,M.Macro,t);o.add(e,n)}}const w=i.create("configmacros",{init:function(e){new p(O,{},h),new m(b,{},{}),new f(y,d.environment,{},{}),e.append(i.local({handler:{character:[O],macro:[b],environment:[y]},priority:3}))},config:function(e,t){!function(e){v("active",O,e)}(t),function(e){v("macros",b,e)}(t),function(e){const t=e.parseOptions.handlers.retrieve(y),n=e.parseOptions.options.environments;for(const e of Object.keys(n))t.add(e,new u(e,M.BeginEnv,[!0].concat(n[e])))}(t)},items:{[g.prototype.kind]:g},options:{active:s({}),macros:s({}),environments:s({})}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/configmacros","4.0.0-beta.4","tex-extension"),o({_:{input:{tex:{configmacros:{ConfigMacrosConfiguration:t}}}}})})();