(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{CenternotConfiguration:()=>u,filterCenterOver:()=>l});const n=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(n.GLOBAL,n.isObject,n.combineConfig,n.combineDefaults,n.combineWithMathJax),r=(n.MathJax,MathJax._.input.tex.Configuration),o=r.Configuration,i=(r.ConfigurationHandler,r.ParserConfiguration,MathJax._.input.tex.TexParser.default),c=MathJax._.input.tex.NodeUtil.default,d=MathJax._.input.tex.TokenMap,s=(d.parseResult,d.AbstractTokenMap,d.RegExpMap,d.AbstractParseMap,d.CharacterMap,d.DelimiterMap,d.MacroMap,d.CommandMap),p=(d.EnvironmentMap,MathJax._.input.tex.base.BaseMethods);p.splitAlignArray;function l({data:e}){for(const t of e.getList("centerOver")){const e=c.getTexClass(t.childNodes[0].childNodes[0]);null!==e&&c.setProperties(t.parent.parent.parent.parent.parent.parent,{texClass:e})}}new s("centernot",{centerOver:"CenterOver",centernot:["Macro","\\centerOver{#1}{{\u29f8}}",1]},{CenterOver(e,t){const n="{"+e.GetArgument(t)+"}",a=e.ParseArg(t),r=new i(n,e.stack.env,e.configuration).mml();let o=e.create("node","TeXAtom",[new i(n,e.stack.env,e.configuration).mml(),e.create("node","mpadded",[e.create("node","mpadded",[a],{width:0,lspace:"-.5width"}),e.create("node","mphantom",[r])],{width:0,lspace:"-.5width"})]);e.configuration.addNode("centerOver",r),e.Push(o)},Macro:p.default.Macro});const u=o.create("centernot",{handler:{macro:["centernot"]},postprocessors:[l]});MathJax.loader&&MathJax.loader.checkVersion("[tex]/centernot","4.0.0-beta.4","tex-extension"),a({_:{input:{tex:{centernot:{CenternotConfiguration:t}}}}})})();