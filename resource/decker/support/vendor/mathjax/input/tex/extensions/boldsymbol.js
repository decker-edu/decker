(()=>{"use strict";var t={d:(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{BoldsymbolConfiguration:()=>M,BoldsymbolMethods:()=>y,createBoldToken:()=>m,rewriteBoldTokens:()=>f});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,o=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults,a.combineWithMathJax),n=(a.MathJax,MathJax._.input.tex.HandlerTypes),r=n.ConfigurationType,i=n.HandlerType,l=MathJax._.input.tex.Configuration,d=l.Configuration,s=(l.ConfigurationHandler,l.ParserConfiguration,MathJax._.input.tex.NodeUtil.default),b=MathJax._.input.tex.TexConstants.TexConstant,c=MathJax._.input.tex.TokenMap,p=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap,c.MacroMap,c.CommandMap),u=(c.EnvironmentMap,MathJax._.input.tex.NodeFactory.NodeFactory);let x={};x[b.Variant.NORMAL]=b.Variant.BOLD,x[b.Variant.ITALIC]=b.Variant.BOLDITALIC,x[b.Variant.FRAKTUR]=b.Variant.BOLDFRAKTUR,x[b.Variant.SCRIPT]=b.Variant.BOLDSCRIPT,x[b.Variant.SANSSERIF]=b.Variant.BOLDSANSSERIF,x["-tex-calligraphic"]="-tex-bold-calligraphic",x["-tex-oldstyle"]="-tex-bold-oldstyle",x["-tex-mathit"]=b.Variant.BOLDITALIC;const y={Boldsymbol(t,e){let a=t.stack.env.boldsymbol;t.stack.env.boldsymbol=!0;let o=t.ParseArg(e);t.stack.env.boldsymbol=a,t.Push(o)}};function m(t,e,a,o){let n=u.createToken(t,e,a,o);return"mtext"!==e&&t.configuration.parser.stack.env.boldsymbol&&(s.setProperty(n,"fixBold",!0),t.configuration.addNode("fixBold",n)),n}function f(t){for(let e of t.data.getList("fixBold"))if(s.getProperty(e,"fixBold")){let t=s.getAttribute(e,"mathvariant");null==t?s.setAttribute(e,"mathvariant",b.Variant.BOLD):s.setAttribute(e,"mathvariant",x[t]||t),s.removeProperties(e,"fixBold")}}new p("boldsymbol",{boldsymbol:y.Boldsymbol});const M=d.create("boldsymbol",{[r.HANDLER]:{[i.MACRO]:["boldsymbol"]},[r.NODES]:{token:m},[r.POSTPROCESSORS]:[f]});MathJax.loader&&MathJax.loader.checkVersion("[tex]/boldsymbol","4.0.0-beta.7","tex-extension"),o({_:{input:{tex:{boldsymbol:{BoldsymbolConfiguration:e}}}}})})();