(()=>{"use strict";var t={d:(e,o)=>{for(var a in o)t.o(o,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:o[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{BoldsymbolConfiguration:()=>x,BoldsymbolMethods:()=>m,createBoldToken:()=>p,rewriteBoldTokens:()=>u});const o=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(o.GLOBAL,o.isObject,o.combineConfig,o.combineDefaults,o.combineWithMathJax),n=(o.MathJax,MathJax._.input.tex.Configuration),r=n.Configuration,i=(n.ConfigurationHandler,n.ParserConfiguration,MathJax._.input.tex.NodeUtil.default),l=MathJax._.input.tex.TexConstants.TexConstant,s=MathJax._.input.tex.TokenMap,d=(s.parseResult,s.AbstractTokenMap,s.RegExpMap,s.AbstractParseMap,s.CharacterMap,s.DelimiterMap,s.MacroMap,s.CommandMap),b=(s.EnvironmentMap,MathJax._.input.tex.NodeFactory.NodeFactory);let c={};c[l.Variant.NORMAL]=l.Variant.BOLD,c[l.Variant.ITALIC]=l.Variant.BOLDITALIC,c[l.Variant.FRAKTUR]=l.Variant.BOLDFRAKTUR,c[l.Variant.SCRIPT]=l.Variant.BOLDSCRIPT,c[l.Variant.SANSSERIF]=l.Variant.BOLDSANSSERIF,c["-tex-calligraphic"]="-tex-bold-calligraphic",c["-tex-oldstyle"]="-tex-bold-oldstyle",c["-tex-mathit"]=l.Variant.BOLDITALIC;let m={};function p(t,e,o,a){let n=b.createToken(t,e,o,a);return"mtext"!==e&&t.configuration.parser.stack.env.boldsymbol&&(i.setProperty(n,"fixBold",!0),t.configuration.addNode("fixBold",n)),n}function u(t){for(let e of t.data.getList("fixBold"))if(i.getProperty(e,"fixBold")){let t=i.getAttribute(e,"mathvariant");null==t?i.setAttribute(e,"mathvariant",l.Variant.BOLD):i.setAttribute(e,"mathvariant",c[t]||t),i.removeProperties(e,"fixBold")}}m.Boldsymbol=function(t,e){let o=t.stack.env.boldsymbol;t.stack.env.boldsymbol=!0;let a=t.ParseArg(e);t.stack.env.boldsymbol=o,t.Push(a)},new d("boldsymbol",{boldsymbol:"Boldsymbol"},m);const x=r.create("boldsymbol",{handler:{macro:["boldsymbol"]},nodes:{token:p},postprocessors:[u]});MathJax.loader&&MathJax.loader.checkVersion("[tex]/boldsymbol","4.0.0-beta.4","tex-extension"),a({_:{input:{tex:{boldsymbol:{BoldsymbolConfiguration:e}}}}})})();