(()=>{"use strict";var t={d:(e,a)=>{for(var r in a)t.o(a,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{MathtoolsUtil:()=>R});var a={};t.r(a),t.d(a,{MathtoolsMethods:()=>_});var r={};t.r(r),t.d(r,{MathtoolsTagFormat:()=>j});var o={};t.r(o),t.d(o,{MultlinedItem:()=>V});var n={};t.r(n),t.d(n,{MathtoolsConfiguration:()=>z,PAIREDDELIMS:()=>W,fixPrescripts:()=>H});const s=("undefined"!=typeof window?window:global).MathJax._.components.global,l=(s.GLOBAL,s.isObject,s.combineConfig,s.combineDefaults,s.combineWithMathJax),i=(s.MathJax,MathJax._.input.tex.Configuration),m=i.Configuration,c=(i.ConfigurationHandler,i.ParserConfiguration,MathJax._.input.tex.TokenMap),d=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap),p=(c.MacroMap,c.CommandMap),h=c.EnvironmentMap,u=MathJax._.input.tex.NodeUtil.default,g=MathJax._.util.Options,M=(g.isObject,g.APPEND,g.REMOVE,g.OPTIONS,g.Expandable,g.expandable),f=(g.makeArray,g.keys,g.copy,g.insert,g.defaultOptions,g.userOptions,g.selectOptions,g.selectOptionsFromKeys,g.separateOptions,g.lookup),x=MathJax._.input.tex.ParseMethods.default,w=MathJax._.input.tex.TexConstants.TexConstant,A=MathJax._.input.tex.ParseUtil.default,b=MathJax._.input.tex.ams.AmsMethods,y=b.AmsMethods,P=(b.NEW_OPS,MathJax._.input.tex.base.BaseMethods),k=(P.splitAlignArray,P.default),v=MathJax._.input.tex.TexParser.default,T=MathJax._.input.tex.TexError.default,S=MathJax._.core.MmlTree.MmlNode,C=S.TEXCLASS,D=(S.TEXCLASSNAMES,S.MATHVARIANTS,S.indentAttributes,S.AbstractMmlNode,S.AbstractMmlTokenNode,S.AbstractMmlLayoutNode,S.AbstractMmlBaseNode,S.AbstractMmlEmptyNode,S.TextNode,S.XMLNode,MathJax._.util.lengths),E=(D.BIGDIMEN,D.UNITS,D.RELUNITS,D.MATHSPACE,D.length2em),G=(D.percent,D.em),I=(D.emRounded,D.px,MathJax._.input.tex.newcommand.NewcommandUtil.default),L=MathJax._.input.tex.newcommand.NewcommandMethods.default,O=MathJax._.input.tex.base.BaseItems,B=(O.StartItem,O.StopItem,O.OpenItem,O.CloseItem,O.PrimeItem,O.SubsupItem,O.OverItem,O.LeftItem,O.Middle,O.RightItem,O.BreakItem,O.BeginItem,O.EndItem,O.StyleItem,O.PositionItem,O.CellItem,O.MmlItem,O.FnItem,O.NotItem,O.NonscriptItem,O.DotsItem,O.ArrayItem,O.EqnArrayItem),N=(O.MstyleItem,O.EquationItem,MathJax._.input.tex.Token),F=(N.Token,N.Macro),R={setDisplayLevel(t,e){if(!e)return;const[a,r]=f(e,{"\\displaystyle":[!0,0],"\\textstyle":[!1,0],"\\scriptstyle":[!1,1],"\\scriptscriptstyle":[!1,2]},[null,null]);null!==a&&(t.attributes.set("displaystyle",a),t.attributes.set("scriptlevel",r))},checkAlignment(t,e){const a=t.stack.Top();if(a.kind!==B.prototype.kind)throw new T("NotInAlignment","%1 can only be used in aligment environments",e);return a},addPairedDelims(t,e,a){t.handlers.retrieve(W).add(e,new F(e,_.PairedDelimiters,a))},spreadLines(t,e){if(!t.isKind("mtable"))return;let a=t.attributes.get("rowspacing");if(a){const t=A.dimen2em(e);a=a.split(/ /).map((e=>A.Em(Math.max(0,A.dimen2em(e)+t)))).join(" ")}else a=e;t.attributes.set("rowspacing",a)},plusOrMinus(t,e){if(!(e=e.trim()).match(/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)$/))throw new T("NotANumber","Argument to %1 is not a number",t);return e.match(/^[-+]/)?e:"+"+e},getScript(t,e,a){let r=A.trimSpaces(t.GetArgument(e));if(""===r)return t.create("node","none");const o=t.options.mathtools[`prescript-${a}-format`];return o&&(r=`${o}{${r}}`),new v(r,t.stack.env,t.configuration).mml()}},_={MtMatrix(t,e,a,r){const o=t.GetBrackets(`\\begin{${e.getName()}}`,"c");return _.Array(t,e,a,r,o)},MtSmallMatrix:(t,e,a,r,o)=>(o||(o=t.GetBrackets(`\\begin{${e.getName()}}`,t.options.mathtools["smallmatrix-align"])),_.Array(t,e,a,r,o,A.Em(1/3),".2em","S",1)),MtMultlined(t,e){const a=`\\begin{${e.getName()}}`;let r="c",o="";if(!t.nextIsSpace()){const e=t.GetBrackets(a,t.options.mathtools["multlined-pos"]||"c");if(e.match(/^[ctb]$/)?(r=e,o=t.nextIsSpace()?"":t.GetBrackets(a,"")):o=e,o&&!A.matchDimen(o)[0])throw new T("BadWidth","Width for %1 must be a dimension",a)}t.Push(e);const n=t.itemFactory.create("multlined",t,e);return n.arraydef={displaystyle:!0,rowspacing:".5em",width:o||"auto",columnwidth:"100%"},A.setArrayAlign(n,r||"c")},HandleShove(t,e,a){let r=t.stack.Top();if("multline"!==r.kind&&"multlined"!==r.kind)throw new T("CommandInMultlined","%1 can only appear within the multline or multlined environments",e);if(r.Size())throw new T("CommandAtTheBeginingOfLine","%1 must come at the beginning of the line",e);r.setProperty("shove",a);let o=t.GetBrackets(e),n=t.ParseArg(e);if(o){let e=t.create("node","mrow",[]),r=t.create("node","mspace",[],{width:o});"left"===a?(e.appendChild(r),e.appendChild(n)):(e.appendChild(n),e.appendChild(r)),n=e}t.Push(n)},SpreadLines(t,e){if(t.stack.env.closing===e.getName()){delete t.stack.env.closing;const e=t.stack.Pop(),a=e.toMml(),r=e.getProperty("spread");if(a.isInferred)for(const t of u.getChildren(a))R.spreadLines(t,r);else R.spreadLines(a,r);t.Push(a)}else{const a=t.GetDimen(`\\begin{${e.getName()}}`);e.setProperty("spread",a),e.setProperty("nestable",!0),t.Push(e)}},Cases(t,e,a,r,o){const n=t.itemFactory.create("array").setProperty("casesEnv",e.getName());return n.arraydef={rowspacing:".2em",columnspacing:"1em",columnalign:"left"},"D"===o&&(n.arraydef.displaystyle=!0),n.setProperties({open:a,close:r}),t.Push(e),n},MathLap(t,e,a,r){const o=t.GetBrackets(e,"").trim();let n=t.create("node","mstyle",[t.create("node","mpadded",[t.ParseArg(e)],Object.assign({width:0},"r"===a?{}:{lspace:"l"===a?"-1width":"-.5width"}))],{"data-cramped":r});R.setDisplayLevel(n,o),t.Push(t.create("node","TeXAtom",[n]))},Cramped(t,e){const a=t.GetBrackets(e,"").trim(),r=t.ParseArg(e),o=t.create("node","mstyle",[r],{"data-cramped":!0});R.setDisplayLevel(o,a),t.Push(o)},MtLap(t,e,a){const r=A.internalMath(t,t.GetArgument(e),0);let o=t.create("node","mpadded",r,{width:0});"r"!==a&&u.setAttribute(o,"lspace","l"===a?"-1width":"-.5width"),t.Push(o)},MathMakeBox(t,e){const a=t.GetBrackets(e),r=t.GetBrackets(e,"c"),o=t.create("node","mpadded",[t.ParseArg(e)]);a&&u.setAttribute(o,"width",a);const n=f(r.toLowerCase(),{c:"center",r:"right"},"");n&&u.setAttribute(o,"data-align",n),r.toLowerCase()!==r&&u.setAttribute(o,"data-overflow","linebreak"),t.Push(o)},MathMBox(t,e){t.Push(t.create("node","mrow",[t.ParseArg(e)]))},UnderOverBracket(t,e){const a=E(t.GetBrackets(e,".1em"),.1),r=t.GetBrackets(e,".2em"),o=t.GetArgument(e),[n,s,l]="o"===e.charAt(1)?["over","accent","bottom"]:["under","accentunder","top"],i=G(a),m=new v(o,t.stack.env,t.configuration).mml(),c=new v(o,t.stack.env,t.configuration).mml(),d=t.create("node","mpadded",[t.create("node","mphantom",[c])],{style:`border: ${i} solid; border-${l}: none`,height:r,depth:0}),p=A.underOver(t,m,d,n,!0),h=u.getChildAt(u.getChildAt(p,0),0);u.setAttribute(h,s,!0),t.Push(p)},Aboxed(t,e){const a=R.checkAlignment(t,e);a.row.length%2==1&&a.row.push(t.create("node","mtd",[]));const r=t.GetArgument(e),o=t.string.substr(t.i);t.string=r+"&&\\endAboxed",t.i=0;const n=t.GetUpTo(e,"&"),s=t.GetUpTo(e,"&");t.GetUpTo(e,"\\endAboxed");const l=A.substituteArgs(t,[n,s],"\\rlap{\\boxed{#1{}#2}}\\kern.267em\\phantom{#1}&\\phantom{{}#2}\\kern.267em");t.string=l+o,t.i=0},ArrowBetweenLines(t,e){const a=R.checkAlignment(t,e);if(a.Size()||a.row.length)throw new T("BetweenLines","%1 must be on a row by itself",e);const r=t.GetStar(),o=t.GetBrackets(e,"\\Updownarrow");r&&(a.EndEntry(),a.EndEntry());const n=new v(r?"\\quad"+o:o+"\\quad",t.stack.env,t.configuration).mml();t.Push(n),a.EndEntry(),a.EndRow()},VDotsWithin(t,e){const a=t.stack.Top(),r=a.table&&a.getProperty("flushspaceabove")===a.table.length,o="\\mmlToken{mi}{}"+t.GetArgument(e)+"\\mmlToken{mi}{}",n=new v(o,t.stack.env,t.configuration).mml();let s=t.create("node","mpadded",[t.create("node","mpadded",[t.create("node","mo",[t.create("text","\u22ee")])],Object.assign({width:0,lspace:"-.5width"},r?{height:"-.6em",voffset:"-.18em"}:{})),t.create("node","mphantom",[n])],{lspace:".5width"});t.Push(s)},ShortVDotsWithin(t,e){const a=t.stack.Top(),r=t.GetStar();a.EndEntry&&(_.FlushSpaceAbove(t,"\\MTFlushSpaceAbove"),!r&&a.EndEntry()),_.VDotsWithin(t,"\\vdotswithin"),a.EndEntry&&(r&&a.EndEntry(),_.FlushSpaceBelow(t,"\\MTFlushSpaceBelow"))},FlushSpaceAbove(t,e){const a=R.checkAlignment(t,e);a.table&&(a.setProperty("flushspaceabove",a.table.length),a.addRowSpacing("-"+t.options.mathtools.shortvdotsadjustabove))},FlushSpaceBelow(t,e){const a=R.checkAlignment(t,e);a.table&&(a.Size()&&a.EndEntry(),a.EndRow(),a.addRowSpacing("-"+t.options.mathtools.shortvdotsadjustbelow))},PairedDelimiters(t,e,a,r,o="#1",n=1,s="",l=""){const i=t.GetStar(),m=i?"":t.GetBrackets(e),[c,d]=i?["\\left","\\right"]:m?[m+"l",m+"r"]:["",""],p=i?"\\middle":m||"";if(n){const a=[];for(let r=a.length;r<n;r++)a.push(t.GetArgument(e));s=A.substituteArgs(t,a,s),o=A.substituteArgs(t,a,o),l=A.substituteArgs(t,a,l)}o=o.replace(/\\delimsize/g,p),t.string=[s,c,a,o,d,r,l,t.string.substr(t.i)].reduce(((e,a)=>A.addArgs(t,e,a)),""),t.i=0,A.checkMaxMacros(t)},DeclarePairedDelimiter(t,e){const a=I.GetCsNameArgument(t,e),r=t.GetArgument(e),o=t.GetArgument(e);R.addPairedDelims(t.configuration,a,[r,o])},DeclarePairedDelimiterX(t,e){const a=I.GetCsNameArgument(t,e),r=I.GetArgCount(t,e),o=t.GetArgument(e),n=t.GetArgument(e),s=t.GetArgument(e);R.addPairedDelims(t.configuration,a,[o,n,s,r])},DeclarePairedDelimiterXPP(t,e){const a=I.GetCsNameArgument(t,e),r=I.GetArgCount(t,e),o=t.GetArgument(e),n=t.GetArgument(e),s=t.GetArgument(e),l=t.GetArgument(e),i=t.GetArgument(e);R.addPairedDelims(t.configuration,a,[n,s,i,r,o,l])},CenterColon(t,e,a,r=!1,o=!1){const n=t.options.mathtools;let s=t.create("token","mo",{},":");if(a&&(n.centercolon||r)){const e=n["centercolon-offset"];s=t.create("node","mpadded",[s],Object.assign({voffset:e,height:`+${e}`,depth:`-${e}`},o?{width:n["thincolon-dw"],lspace:n["thincolon-dx"]}:{}))}t.Push(s)},Relation(t,e,a,r){t.options.mathtools["use-unicode"]&&r?t.Push(t.create("token","mo",{texClass:C.REL},r)):(a="\\mathrel{"+a.replace(/:/g,"\\MTThinColon").replace(/-/g,"\\mathrel{-}")+"}",t.string=A.addArgs(t,a,t.string.substr(t.i)),t.i=0)},NArrow(t,e,a,r){t.Push(t.create("node","TeXAtom",[t.create("token","mtext",{},a),t.create("node","mpadded",[t.create("node","mpadded",[t.create("node","menclose",[t.create("node","mspace",[],{height:".2em",depth:0,width:".4em"})],{notation:"updiagonalstrike","data-thickness":".05em","data-padding":0})],{width:0,lspace:"-.5width",voffset:r}),t.create("node","mphantom",[t.create("token","mtext",{},a)])],{width:0,lspace:"-.5width"})],{texClass:C.REL}))},SplitFrac(t,e,a){const r=t.ParseArg(e),o=t.ParseArg(e);t.Push(t.create("node","mstyle",[t.create("node","mfrac",[t.create("node","mstyle",[r,t.create("token","mi"),t.create("token","mspace",{width:"1em"})],{scriptlevel:0}),t.create("node","mstyle",[t.create("token","mspace",{width:"1em"}),t.create("token","mi"),o],{scriptlevel:0})],{linethickness:0,numalign:"left",denomalign:"right"})],{displaystyle:a,scriptlevel:0}))},XMathStrut(t,e){let a=t.GetBrackets(e),r=t.GetArgument(e);r=R.plusOrMinus(e,r),a=R.plusOrMinus(e,a||r),t.Push(t.create("node","TeXAtom",[t.create("node","mpadded",[t.create("node","mphantom",[t.create("token","mo",{stretchy:!1},"(")])],{width:0,height:r+"height",depth:a+"depth"})],{texClass:C.ORD}))},Prescript(t,e){const a=R.getScript(t,e,"sup"),r=R.getScript(t,e,"sub"),o=R.getScript(t,e,"arg");if(u.isType(a,"none")&&u.isType(r,"none"))return void t.Push(o);const n=t.create("node","mmultiscripts",[o]);u.getChildren(n).push(null,null),u.appendChildren(n,[t.create("node","mprescripts"),r,a]),n.setProperty("fixPrescript",!0),t.Push(n)},NewTagForm(t,e,a=!1){const r=t.tags;if(!("mtFormats"in r))throw new T("TagsNotMT","%1 can only be used with ams or mathtools tags",e);const o=t.GetArgument(e).trim();if(!o)throw new T("InvalidTagFormID","Tag form name can't be empty");const n=t.GetBrackets(e,""),s=t.GetArgument(e),l=t.GetArgument(e);if(!a&&r.mtFormats.has(o))throw new T("DuplicateTagForm","Duplicate tag form: %1",o);r.mtFormats.set(o,[s,l,n])},UseTagForm(t,e){const a=t.tags;if(!("mtFormats"in a))throw new T("TagsNotMT","%1 can only be used with ams or mathtools tags",e);const r=t.GetArgument(e).trim();if(r){if(!a.mtFormats.has(r))throw new T("UndefinedTagForm","Undefined tag form: %1",r);a.mtCurrent=a.mtFormats.get(r)}else a.mtCurrent=null},SetOptions(t,e){const a=t.options.mathtools;if(!a["allow-mathtoolsset"])throw new T("ForbiddenMathtoolsSet","%1 is disabled",e);const r={};Object.keys(a).forEach((t=>{"pariedDelimiters"!==t&&"tagforms"!==t&&"allow-mathtoolsset"!==t&&(r[t]=1)}));const o=t.GetArgument(e),n=A.keyvalOptions(o,r,!0);for(const t of Object.keys(n))a[t]=n[t]},Array:k.Array,Macro:k.Macro,xArrow:y.xArrow,HandleRef:y.HandleRef,AmsEqnArray:y.AmsEqnArray,MacroWithTemplate:L.MacroWithTemplate};new p("mathtools-macros",{shoveleft:["HandleShove",w.Align.LEFT],shoveright:["HandleShove",w.Align.RIGHT],xleftrightarrow:["xArrow",8596,10,10],xLeftarrow:["xArrow",8656,12,7],xRightarrow:["xArrow",8658,7,12],xLeftrightarrow:["xArrow",8660,12,12],xhookleftarrow:["xArrow",8617,10,5],xhookrightarrow:["xArrow",8618,5,10],xmapsto:["xArrow",8614,10,10],xrightharpoondown:["xArrow",8641,5,10],xleftharpoondown:["xArrow",8637,10,5],xrightleftharpoons:["xArrow",8652,10,10],xrightharpoonup:["xArrow",8640,5,10],xleftharpoonup:["xArrow",8636,10,5],xleftrightharpoons:["xArrow",8651,10,10],mathllap:["MathLap","l",!1],mathrlap:["MathLap","r",!1],mathclap:["MathLap","c",!1],clap:["MtLap","c"],textllap:["MtLap","l"],textrlap:["MtLap","r"],textclap:["MtLap","c"],cramped:"Cramped",crampedllap:["MathLap","l",!0],crampedrlap:["MathLap","r",!0],crampedclap:["MathLap","c",!0],crampedsubstack:["Macro","\\begin{crampedsubarray}{c}#1\\end{crampedsubarray}",1],mathmbox:"MathMBox",mathmakebox:"MathMakeBox",overbracket:"UnderOverBracket",underbracket:"UnderOverBracket",refeq:"HandleRef",MoveEqLeft:["Macro","\\hspace{#1em}&\\hspace{-#1em}",1,"2"],Aboxed:"Aboxed",ArrowBetweenLines:"ArrowBetweenLines",vdotswithin:"VDotsWithin",shortvdotswithin:"ShortVDotsWithin",MTFlushSpaceAbove:"FlushSpaceAbove",MTFlushSpaceBelow:"FlushSpaceBelow",DeclarePairedDelimiter:"DeclarePairedDelimiter",DeclarePairedDelimiterX:"DeclarePairedDelimiterX",DeclarePairedDelimiterXPP:"DeclarePairedDelimiterXPP",DeclarePairedDelimiters:"DeclarePairedDelimiter",DeclarePairedDelimitersX:"DeclarePairedDelimiterX",DeclarePairedDelimitersXPP:"DeclarePairedDelimiterXPP",centercolon:["CenterColon",!0,!0],ordinarycolon:["CenterColon",!1],MTThinColon:["CenterColon",!0,!0,!0],coloneqq:["Relation",":=","\u2254"],Coloneqq:["Relation","::=","\u2a74"],coloneq:["Relation",":-"],Coloneq:["Relation","::-"],eqqcolon:["Relation","=:","\u2255"],Eqqcolon:["Relation","=::"],eqcolon:["Relation","-:","\u2239"],Eqcolon:["Relation","-::"],colonapprox:["Relation",":\\approx"],Colonapprox:["Relation","::\\approx"],colonsim:["Relation",":\\sim"],Colonsim:["Relation","::\\sim"],dblcolon:["Relation","::","\u2237"],nuparrow:["NArrow","\u2191",".06em"],ndownarrow:["NArrow","\u2193",".25em"],bigtimes:["Macro","\\mathop{\\Large\\kern-.1em\\boldsymbol{\\times}\\kern-.1em}"],splitfrac:["SplitFrac",!1],splitdfrac:["SplitFrac",!0],xmathstrut:"XMathStrut",prescript:"Prescript",newtagform:["NewTagForm",!1],renewtagform:["NewTagForm",!0],usetagform:"UseTagForm",adjustlimits:["MacroWithTemplate","\\mathop{{#1}\\vphantom{{#3}}}_{{#2}\\vphantom{{#4}}}\\mathop{{#3}\\vphantom{{#1}}}_{{#4}\\vphantom{{#2}}}",4,,"_",,"_"],mathtoolsset:"SetOptions"},_),new h("mathtools-environments",x.environment,{dcases:["Array",null,"\\{","","ll",null,".2em","D"],rcases:["Array",null,"","\\}","ll",null,".2em"],drcases:["Array",null,"","\\}","ll",null,".2em","D"],"dcases*":["Cases",null,"{","","D"],"rcases*":["Cases",null,"","}"],"drcases*":["Cases",null,"","}","D"],"cases*":["Cases",null,"{",""],"matrix*":["MtMatrix",null,null,null],"pmatrix*":["MtMatrix",null,"(",")"],"bmatrix*":["MtMatrix",null,"[","]"],"Bmatrix*":["MtMatrix",null,"\\{","\\}"],"vmatrix*":["MtMatrix",null,"\\vert","\\vert"],"Vmatrix*":["MtMatrix",null,"\\Vert","\\Vert"],"smallmatrix*":["MtSmallMatrix",null,null,null],psmallmatrix:["MtSmallMatrix",null,"(",")","c"],"psmallmatrix*":["MtSmallMatrix",null,"(",")"],bsmallmatrix:["MtSmallMatrix",null,"[","]","c"],"bsmallmatrix*":["MtSmallMatrix",null,"[","]"],Bsmallmatrix:["MtSmallMatrix",null,"\\{","\\}","c"],"Bsmallmatrix*":["MtSmallMatrix",null,"\\{","\\}"],vsmallmatrix:["MtSmallMatrix",null,"\\vert","\\vert","c"],"vsmallmatrix*":["MtSmallMatrix",null,"\\vert","\\vert"],Vsmallmatrix:["MtSmallMatrix",null,"\\Vert","\\Vert","c"],"Vsmallmatrix*":["MtSmallMatrix",null,"\\Vert","\\Vert"],crampedsubarray:["Array",null,null,null,null,"0em","0.1em","S'",1],multlined:"MtMultlined",spreadlines:["SpreadLines",!0],lgathered:["AmsEqnArray",null,null,null,"l","t",null,".5em","D"],rgathered:["AmsEqnArray",null,null,null,"r","t",null,".5em","D"]},_),new d("mathtools-delimiters",x.delimiter,{"\\lparen":"(","\\rparen":")"}),new p("mathtools-characters",{":":["CenterColon",!0]},_);const J=MathJax._.input.tex.Tags,q=(J.Label,J.TagInfo,J.AbstractTags,J.NoTags,J.AllTags,J.TagsFactory);let $=0;function j(t,e){const a=e.parseOptions.options.tags;"base"!==a&&t.tags.hasOwnProperty(a)&&q.add(a,t.tags[a]);const r=q.create(e.parseOptions.options.tags).constructor;$++;const o="MathtoolsTags-"+$;q.add(o,class extends r{constructor(){super(),this.mtFormats=new Map,this.mtCurrent=null;const t=e.parseOptions.options.mathtools.tagforms;for(const e of Object.keys(t)){if(!Array.isArray(t[e])||3!==t[e].length)throw new T("InvalidTagFormDef",'The tag form definition for "%1" should be an array fo three strings',e);this.mtFormats.set(e,t[e])}}formatTag(t){if(this.mtCurrent){const[e,a,r]=this.mtCurrent;return r?`${e}${r}{${t}}${a}`:`${e}${t}${a}`}return super.formatTag(t)}}),e.parseOptions.options.tags=o}const U=MathJax._.input.tex.ams.AmsItems,X=U.MultlineItem;U.FlalignItem;class V extends X{get kind(){return"multlined"}EndTable(){if((this.Size()||this.row.length)&&(this.EndEntry(),this.EndRow()),this.table.length>1){const t=this.factory.configuration.options.mathtools,e=t.multlinegap,a=t["firstline-afterskip"]||e,r=t["lastline-preskip"]||e,o=u.getChildren(this.table[0])[0];u.getAttribute(o,"columnalign")!==w.Align.RIGHT&&o.appendChild(this.create("node","mspace",[],{width:a}));const n=u.getChildren(this.table[this.table.length-1])[0];if(u.getAttribute(n,"columnalign")!==w.Align.LEFT){const t=u.getChildren(n)[0];t.childNodes.unshift(null);const e=this.create("node","mspace",[],{width:r});u.setChild(t,0,e)}}super.EndTable.call(this)}}const W="mathtools-paired-delims";function H({data:t}){for(const e of t.getList("mmultiscripts")){if(!e.getProperty("fixPrescript"))continue;const a=u.getChildren(e);let r=0;for(const o of[1,2])a[o]||(u.setChild(e,o,t.nodeFactory.create("node","none")),r++);for(const r of[4,5])u.isType(a[r],"mrow")&&0===u.getChildren(a[r]).length&&u.setChild(e,r,t.nodeFactory.create("node","none"));2===r&&a.splice(1,2)}}const z=m.create("mathtools",{handler:{macro:["mathtools-macros","mathtools-delimiters"],environment:["mathtools-environments"],delimiter:["mathtools-delimiters"],character:["mathtools-characters"]},items:{[V.prototype.kind]:V},init:function(t){new p(W,{},{}),t.append(m.local({handler:{macro:[W]},priority:-5}))},config:function(t,e){const a=e.parseOptions,r=a.options.mathtools.pairedDelimiters;for(const t of Object.keys(r))R.addPairedDelims(a,t,r[t]);j(t,e)},postprocessors:[[H,-6]],options:{mathtools:{multlinegap:"1em","multlined-pos":"c","firstline-afterskip":"","lastline-preskip":"","smallmatrix-align":"c",shortvdotsadjustabove:".2em",shortvdotsadjustbelow:".2em",centercolon:!1,"centercolon-offset":".04em","thincolon-dx":"-.04em","thincolon-dw":"-.08em","use-unicode":!1,"prescript-sub-format":"","prescript-sup-format":"","prescript-arg-format":"","allow-mathtoolsset":!0,pairedDelimiters:M({}),tagforms:M({})}}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/mathtools","4.0.0-beta.4","tex-extension"),l({_:{input:{tex:{mathtools:{MathtoolsConfiguration:n,MathtoolsItems:o,MathtoolsMethods:a,MathtoolsTags:r,MathtoolsUtil:e}}}}})})();