(()=>{"use strict";var e={d:(t,o)=>{for(var a in o)e.o(o,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:o[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{BboxConfiguration:()=>b,BboxMethods:()=>s});const o=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(o.GLOBAL,o.isObject,o.combineConfig,o.combineDefaults,o.combineWithMathJax),n=(o.MathJax,MathJax._.input.tex.Configuration),i=n.Configuration,r=(n.ConfigurationHandler,n.ParserConfiguration,MathJax._.input.tex.TokenMap),c=(r.parseResult,r.AbstractTokenMap,r.RegExpMap,r.AbstractParseMap,r.CharacterMap,r.DelimiterMap,r.MacroMap,r.CommandMap),l=(r.EnvironmentMap,MathJax._.input.tex.TexError.default);let s={BBox:function(e,t){const o=e.GetBrackets(t,"");let a=e.ParseArg(t);const n=o.split(/,/);let i,r,c;for(let e=0,o=n.length;e<o;e++){const o=n[e].trim(),a=o.match(/^(\.\d+|\d+(\.\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);if(a){if(i)throw new l("MultipleBBoxProperty","%1 specified twice in %2","Padding",t);const e=p(a[1]+a[3]);e&&(i={height:"+"+e,depth:"+"+e,lspace:e,width:"+"+2*parseInt(a[1],10)+a[3]})}else if(o.match(/^([a-z0-9]+|\#[0-9a-f]{6}|\#[0-9a-f]{3})$/i)){if(r)throw new l("MultipleBBoxProperty","%1 specified twice in %2","Background",t);r=o}else if(o.match(/^[-a-z]+:/i)){if(c)throw new l("MultipleBBoxProperty","%1 specified twice in %2","Style",t);c=d(o)}else if(""!==o)throw new l("InvalidBBoxProperty",'"%1" doesn\'t look like a color, a padding dimension, or a style',o)}i&&(a=e.create("node","mpadded",[a],i)),(r||c)&&(i={},r&&Object.assign(i,{mathbackground:r}),c&&Object.assign(i,{style:c}),a=e.create("node","mstyle",[a],i)),e.Push(a)}},d=function(e){return e},p=function(e){return e};new c("bbox",{bbox:"BBox"},s);const b=i.create("bbox",{handler:{macro:["bbox"]}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/bbox","4.0.0-beta.4","tex-extension"),a({_:{input:{tex:{bbox:{BboxConfiguration:t}}}}})})();